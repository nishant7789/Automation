{"name": "test_invalid_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".oxd-alert--error\"}\n  (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff720fccda5+78885]\n\tGetHandleVerifier [0x0x7ff720fcce00+78976]\n\t(No symbol) [0x0x7ff720d89bca]\n\t(No symbol) [0x0x7ff720de0766]\n\t(No symbol) [0x0x7ff720de0a1c]\n\t(No symbol) [0x0x7ff720e34467]\n\t(No symbol) [0x0x7ff720e08bcf]\n\t(No symbol) [0x0x7ff720e3122f]\n\t(No symbol) [0x0x7ff720e08963]\n\t(No symbol) [0x0x7ff720dd16b1]\n\t(No symbol) [0x0x7ff720dd2443]\n\tGetHandleVerifier [0x0x7ff7212a4eed+3061101]\n\tGetHandleVerifier [0x0x7ff72129f33d+3037629]\n\tGetHandleVerifier [0x0x7ff7212be592+3165202]\n\tGetHandleVerifier [0x0x7ff720fe730e+186766]\n\tGetHandleVerifier [0x0x7ff720feeb3f+217535]\n\tGetHandleVerifier [0x0x7ff720fd59b4+114740]\n\tGetHandleVerifier [0x0x7ff720fd5b69+115177]\n\tGetHandleVerifier [0x0x7ff720fbc368+10728]\n\tBaseThreadInitThunk [0x0x7ffd88f87374+20]\n\tRtlUserThreadStart [0x0x7ffd8adfcc91+33]", "trace": "self = <tests.login_logout_test.TestLogin_logout object at 0x000002070782D430>\n\n    def test_invalid_login(self):\n        self.driver.get(config[\"base_url\"])\n        login_page = LoginPage(self.driver)\n        WebDriverWait(self.driver, config[\"timeout\"]).until(\n            EC.presence_of_element_located((By.XPATH, '//h5[text()=\"Login\"]')))\n        print(\"Login Page displayed\")\n        login_page.get_username_field().send_keys(config[\"username\"])\n        log.info(config[\"invalid_password\"])\n        login_page.get_password_field().send_keys(config[\"invalid_password\"])\n        login_page.get_submit_btn().click()\n>       invalid_credentials_message = login_page.get_error_message_invalid_credentials().text\n\nlogin_logout_test.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pageobjects\\loginpage.py:37: in get_error_message_invalid_credentials\n    return self.driver.find_element(*self.invalid_credentials_error_message)\nC:\\Users\\nisha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\nisha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000207077BE630>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff720fbc368+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffd88f87374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffd8adfcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".oxd-alert--error\"}\nE         (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff720fccda5+78885]\nE       \tGetHandleVerifier [0x0x7ff720fcce00+78976]\nE       \t(No symbol) [0x0x7ff720d89bca]\nE       \t(No symbol) [0x0x7ff720de0766]\nE       \t(No symbol) [0x0x7ff720de0a1c]\nE       \t(No symbol) [0x0x7ff720e34467]\nE       \t(No symbol) [0x0x7ff720e08bcf]\nE       \t(No symbol) [0x0x7ff720e3122f]\nE       \t(No symbol) [0x0x7ff720e08963]\nE       \t(No symbol) [0x0x7ff720dd16b1]\nE       \t(No symbol) [0x0x7ff720dd2443]\nE       \tGetHandleVerifier [0x0x7ff7212a4eed+3061101]\nE       \tGetHandleVerifier [0x0x7ff72129f33d+3037629]\nE       \tGetHandleVerifier [0x0x7ff7212be592+3165202]\nE       \tGetHandleVerifier [0x0x7ff720fe730e+186766]\nE       \tGetHandleVerifier [0x0x7ff720feeb3f+217535]\nE       \tGetHandleVerifier [0x0x7ff720fd59b4+114740]\nE       \tGetHandleVerifier [0x0x7ff720fd5b69+115177]\nE       \tGetHandleVerifier [0x0x7ff720fbc368+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd88f87374+20]\nE       \tRtlUserThreadStart [0x0x7ffd8adfcc91+33]\n\nC:\\Users\\nisha\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "5b6436be-a605-4c21-9d48-ff34f57afbc3-attachment.txt", "type": "text/plain"}], "start": 1751351765074, "stop": 1751351771494, "uuid": "34fa6e2e-13b5-4d8d-a855-4190783e69f2", "historyId": "ad261a10614b8da93a70dd75956a8965", "testCaseId": "ad261a10614b8da93a70dd75956a8965", "fullName": "login_logout_test.TestLogin_logout#test_invalid_login", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'login')"}, {"name": "suite", "value": "login_logout_test"}, {"name": "subSuite", "value": "TestLogin_logout"}, {"name": "host", "value": "DESKTOP-5EGJGUV"}, {"name": "thread", "value": "3188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "login_logout_test"}]}